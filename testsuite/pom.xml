<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github</groupId>
	<artifactId>mesimpletest.testsuite</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>TestSuite</name>
	
	<parent>
        <groupId>com.github</groupId>
        <artifactId>mesimpletest</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

	<dependencies>
		<dependency>
			<groupId>com.sun</groupId>
			<artifactId>javatest</artifactId>
			<version>4.4.1</version>
			<scope>compile</scope>			
		</dependency>
		<dependency>
			<groupId>com.sun</groupId>
			<artifactId>javax.help</artifactId>
			<version>2.0.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.sun</groupId>
			<artifactId>j2mefw.javatest</artifactId>
			<version>1.2.2</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.tck</groupId>
			<artifactId>j2me.interview</artifactId>
			<version>1.2.2</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<test.work.dir.name>tckWorkDir</test.work.dir.name>

	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<!-- >execution>
						<id>getMainBaseDir</id>
						<phase>exec</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>								
								<property name="test.workdir" location="tckWorkDir" />
								<echo message="test.workdir=${test.workdir}" />
							</target>
						</configuration>
					</execution -->
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>Copying necessary files</echo>
								<copy file="${basedir}/src/main/resources/example.jti" tofile="${project.build.directory}/example.jti" />
								<copy file="${basedir}/src/main/resources/testsuite.jtt" tofile="${project.build.directory}/testsuite.jtt" />
								<copy todir="${project.build.directory}/tests/">
									<fileset dir="${basedir}/src/main/java/">
										<include name="**/*.java" />
									</fileset>
								</copy>
								<copy todir="${project.build.directory}">
									<fileset dir="${basedir}/src/main/resources/">
										<include name="**/*.*" />
									</fileset>
								</copy>
								<!-- <copy todir="${project.build.directory}/lib/"> <fileset dir="${basedir}/lib/"> 
									<include name="**/*.jar"/> </fileset> <mapper type="flatten"/> </copy> -->
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>

				<version>1.2.1</version>
				<executions>
					<execution>
						<phase>run</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<executable>java</executable>
					<workingDirectory>${project.build.directory}/</workingDirectory>
					<arguments>
						<argument>-classpath</argument>
						<!-- automatically creates the classpath using all project dependencies, also adding the project build directory -->
						<classpath />
						<argument>com.github.mesimpletest.MyJavaTest</argument>
						<argument>-ts</argument>
						<argument>.</argument>
						<argument>-wd</argument>
						<argument>-create</argument>
						<argument>${test.work.dir.name}</argument>
						<argument>-config</argument>
						<argument>example.jti</argument>

					</arguments>
					<!--commandlineArgs>-ts . -wd -create workDir -config example.jti</commandlineArgs -->
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        
        <configuration>
          <archive>
            <manifest>
               <addClasspath>true</addClasspath>
               <classpathPrefix>lib/</classpathPrefix>              
               <mainClass>com.github.mesimpletest.MyJavaTest</mainClass>
            </manifest>
          </archive>
        </configuration>
        
      </plugin>
			

		</plugins>

	</build>
	
</project>